// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MvcTriton.Data;

namespace MvcTriton.Migrations
{
    [DbContext(typeof(MvcTritonContext))]
    partial class MvcTritonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9");

            modelBuilder.Entity("MvcTriton.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BranchEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BranchName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Manager")
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhysicalAddress")
                        .HasColumnType("TEXT");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Movie");
                });

            modelBuilder.Entity("MvcTriton.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Make")
                        .HasColumnType("TEXT");

                    b.Property<string>("Mileage")
                        .HasColumnType("TEXT");

                    b.Property<string>("Model")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("MvcTriton.Models.Waybill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerName")
                        .HasColumnType("TEXT");

                    b.Property<string>("CustomerNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("NoParcels")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalWeight")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Waybill");
                });

            modelBuilder.Entity("MvcTriton.Models.Branch", b =>
                {
                    b.HasOne("MvcTriton.Models.Vehicle", null)
                        .WithMany("Branches")
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("MvcTriton.Models.Waybill", b =>
                {
                    b.HasOne("MvcTriton.Models.Vehicle", null)
                        .WithMany("Waybills")
                        .HasForeignKey("VehicleId");
                });
#pragma warning restore 612, 618
        }
    }
}
